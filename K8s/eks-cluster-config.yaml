---
    apiVersion: eksctl.io/v1alpha5
    kind: ClusterConfig
    
    metadata:
      name: capstone-assignment # name of cluster
      region: us-east-1
      version: "1.20" # kubernetes version
    vpc: # Refer: https://github.com/weaveworks/eksctl/blob/main/examples/04-existing-vpc.yaml
      id: "vpc-0efd4d458b1beb69c"
      subnets:
        public:
          my-public-201-a:
            id: "subnet-0792935cb7c914d03"
            az: "us-east-1a"
          my-public-201-b:
            id: "subnet-0f2729c3528896b7c"
            az: "us-east-1b"
        private:
          my-private-201-a:
            id: "subnet-0f80a494b57686f0d"
            az: "us-east-1a"
          my-private-201-b:
            id: "subnet-0ca5fdbb37924ace0"
            az: "us-east-1b"
      clusterEndpoints:
        publicAccess:  true
        privateAccess: true
      nat:
        gateway: Disable # disable since already created
    
    iam: # Refer: https://eksctl.io/usage/iamserviceaccounts/
      withOIDC: true
      serviceAccounts: # pre-including some common iamserviceaccounts
      - metadata:
          name: aws-load-balancer-controller
          namespace: kube-system
        wellKnownPolicies:
          awsLoadBalancerController: true
      - metadata:
          name: ebs-csi-controller-sa
          namespace: kube-system
        wellKnownPolicies:
          ebsCSIController: true
      - metadata:
          name: efs-csi-controller-sa
          namespace: kube-system
        wellKnownPolicies:
          efsCSIController: true
      - metadata:
          name: external-dns
          namespace: kube-system
        wellKnownPolicies:
          externalDNS: true
      - metadata:
          name: cert-manager
          namespace: cert-manager
        wellKnownPolicies:
          certManager: true
      - metadata:
          name: cluster-autoscaler
          namespace: kube-system
          labels: {aws-usage: "cluster-ops"}
        wellKnownPolicies:
          autoScaler: true
    
    nodeGroups: # Refer: https://github.com/weaveworks/eksctl/blob/main/examples/05-advanced-nodegroups.yaml
      - name: pvt-201-a-1
        labels: { role: workers }
        tags:
          k8s.io/cluster-autoscaler/enabled: "true" # tag is needed for cluster autoscaler. Refer: https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/cloudprovider/aws/README.md#auto-discovery-setup
          k8s.io/cluster-autoscaler/capstone-assignment: "shared" # cluster name tag is optional in latest versions of EKS
        instancesDistribution:
          instanceTypes:
            - t2.medium
        desiredCapacity: 1
        minSize: 1
        maxSize: 2
        privateNetworking: true # include only in private subnet
        subnets:
          - my-private-201-a # 1 AZ is enough for testing
      - name: pub-201-a-1
        labels: { role: workers }
        tags:
          k8s.io/cluster-autoscaler/enabled: "true"
          k8s.io/cluster-autoscaler/capstone-assignment: "shared"
        instancesDistribution:
          instanceTypes:
            - t2.medium
        desiredCapacity: 1
        minSize: 1
        maxSize: 2
        subnets:
          - my-public-201-a
        
    
